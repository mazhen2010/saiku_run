<?xml version="1.0" encoding="UTF-8"?>
<!--+
	| Application context containing JDBC AuthenticationProvider
	| implementation.
	+-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
			   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder
            location="/WEB-INF/applicationContext-spring-security-jdbc.properties"
            ignore-resource-not-found="true"
            ignore-unresolvable="true"
            order ="0" />

    <context:property-placeholder
            location="/WEB-INF/applicationContext-spring-security-jdbc.properties"
            ignore-resource-not-found="true"
            ignore-unresolvable="true"
            order ="-1" />


    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider" />
    </security:authentication-manager>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService">
            <ref bean="userDetailsService" />
        </property>
        <property name="passwordEncoder">
            <ref bean="passwordEncoder" />
        </property>
    </bean>

    <bean id="userDetailsService"
          class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>
                ${jdbcauth.authoritiesquery}
            </value>
        </property>
        <property name="usersByUsernameQuery">
            <value>
                ${jdbcauth.usernamequery}
            </value>
        </property>
    </bean>
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbcauth.driver}" />
        <property name="url"
                  value="${jdbcauth.url}"/>
        <property name="username" value="${jdbcauth.username}" />
        <property name="password" value="${jdbcauth.password}" />
    </bean>

    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!--    <bean id="customerDAO" class="org.saiku.database.JdbcUserDAO">
            <property name="dataSource" ref="dataSource" />
        </bean>

        <bean id="userServiceBean" class="org.saiku.service.user.UserService">
            <property name="jdbcUserDAO" ref="customerDAO"/>
        </bean>
        <bean id="adminBean" class="org.saiku.web.rest.resources.AdminResource">
            <property name="userService" ref="userServiceBean"/>
        <property name="datasourceService" ref="datasourceServiceBean"/>
        </bean>-->
</beans>
